/*
 * react-twoo
 * undefined
 * https://github.com/aarondupon/react-twoo
 * v0.1.0
 * undefined License
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _commonjsHelpers = require('../../../_virtual/_commonjsHelpers.js');
var index$1 = require('./polyfill/index.js');
var index$2 = require('./core/index.js');
var deprecation = require('./deprecation.js');
var index$3 = require('./accessibility/index.js');
var index$4 = require('./extract/index.js');
var index$5 = require('./extras/index.js');
var index$6 = require('./filters/index.js');
var index$7 = require('./interaction/index.js');
var index$8 = require('./loaders/index.js');
var index$9 = require('./mesh/index.js');
var index$a = require('./particles/index.js');
var index$b = require('./prepare/index.js');

var lib = _commonjsHelpers.createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.loader = exports.prepare = exports.particles = exports.mesh = exports.loaders = exports.interaction = exports.filters = exports.extras = exports.extract = exports.accessibility = undefined;



Object.keys(index$1['default']).forEach(function (key) {
  if (key === "default" || key === "__esModule") { return; }
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return index$1['default'][key];
    }
  });
});



Object.keys(index$2.__moduleExports).forEach(function (key) {
  if (key === "default" || key === "__esModule") { return; }
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return index$2.__moduleExports[key];
    }
  });
});



var _deprecation2 = _interopRequireDefault(deprecation.__moduleExports);



var accessibility = _interopRequireWildcard(index$3.__moduleExports);



var extract = _interopRequireWildcard(index$4.__moduleExports);



var extras = _interopRequireWildcard(index$5.__moduleExports);



var filters = _interopRequireWildcard(index$6.__moduleExports);



var interaction = _interopRequireWildcard(index$7.__moduleExports);



var loaders = _interopRequireWildcard(index$8.__moduleExports);



var mesh = _interopRequireWildcard(index$9.__moduleExports);



var particles = _interopRequireWildcard(index$a.__moduleExports);



var prepare = _interopRequireWildcard(index$b.__moduleExports);

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; }
      }
    }

    newObj["default"] = obj;
    return newObj;
  }
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
} // export core


index$2.__moduleExports.utils.mixins.performMixins();
/**
 * Alias for {@link PIXI.loaders.shared}.
 * @name loader
 * @memberof PIXI
 * @type {PIXI.loader.Loader}
 */
// handle mixins now, after all code has been added, including deprecation
// export libs
// import polyfills. Done as an export to make sure polyfills are imported first


var loader = loaders.shared || null;
exports.accessibility = accessibility;
exports.extract = extract;
exports.extras = extras;
exports.filters = filters;
exports.interaction = interaction;
exports.loaders = loaders;
exports.mesh = mesh;
exports.particles = particles;
exports.prepare = prepare;
exports.loader = loader; // Apply the deprecations

if (typeof _deprecation2["default"] === 'function') {
  (0, _deprecation2["default"])(exports);
} // Always export pixi globally.


_commonjsHelpers.commonjsGlobal.PIXI = exports; // eslint-disable-line
});

var index = _commonjsHelpers.unwrapExports(lib);
var lib_1 = lib.loader;
var lib_2 = lib.prepare;
var lib_3 = lib.particles;
var lib_4 = lib.mesh;
var lib_5 = lib.loaders;
var lib_6 = lib.interaction;
var lib_7 = lib.filters;
var lib_8 = lib.extras;
var lib_9 = lib.extract;
var lib_10 = lib.accessibility;

exports.__moduleExports = lib;
exports.accessibility = lib_10;
exports.default = index;
exports.extract = lib_9;
exports.extras = lib_8;
exports.filters = lib_7;
exports.interaction = lib_6;
exports.loader = lib_1;
exports.loaders = lib_5;
exports.mesh = lib_4;
exports.particles = lib_3;
exports.prepare = lib_2;
